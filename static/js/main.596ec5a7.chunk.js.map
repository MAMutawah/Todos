{"version":3,"sources":["Components/TodoForm.jsx","Components/Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","props","useState","todo","setTodo","isChecked","onSubmit","e","preventDefault","todoItem","onAdd","className","type","placeholder","onChange","target","value","Todo","todoList","map","index","id","checked","checkedTodo","htmlFor","onClick","deleteTodo","App","setToDoList","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","todo_id","console","log","arr","newArr","check","i","length","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLA8BeA,G,WA3BE,SAAAC,GAAU,IAAD,EACAC,mBAAS,IADT,mBACjBC,EADiB,KACXC,EADW,OAEHF,oBAAS,GAAvBG,EAFiB,oBAaxB,OACE,sBAAMC,SAVQ,SAAAC,GACdA,EAAEC,iBACF,IAAMC,EAAW,CAAEN,OAAME,aACzBJ,EAAMS,MAAMD,GACZL,EAAQ,KAMR,SACE,sBAAKO,UAAU,WAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,uBAAOA,UAAU,eAAeC,KAAK,OAAOC,YAAY,mBAAmBC,SAAU,SAAAP,GAAC,OAAIH,EAAQG,EAAEQ,OAAOC,QAAQA,MAAOb,MAE5H,qBAAKQ,UAAU,gBAAf,SACE,wBAAQA,UAAU,kBAAlB,0BCIKM,EAxBF,SAAAhB,GAGX,OACE,oBAAIU,UAAU,aAAd,SACIV,EAAMiB,SAASC,KAAI,SAAChB,EAAMiB,GAC1B,OAAO,oBAAIT,UAAU,kBAAd,SACL,+BACE,sBAAKA,UAAU,aAAf,UACE,uBAAOU,GAAE,cAASD,GAAST,UAAU,mBAAmBC,KAAK,WAAWU,QAASnB,EAAKE,UAAWS,SAAU,SAAAP,GAAC,OAAIN,EAAMsB,YAAYH,MAClI,wBAAOI,QAAO,cAASJ,GAAvB,cAAmCjB,EAAKE,UAAY,8BAAMF,EAAKA,OAAcA,EAAKA,QAElF,qBAAKQ,UAAU,cAAf,SACE,qBAAKA,UAAU,uBAAuBc,QAAS,SAAAlB,GAAC,OAAIN,EAAMyB,WAAWN,IAArE,8BAPoCA,SCuDrCO,MA9Cf,WAAgB,IAAD,EACmBzB,mBAAS,IAD5B,mBACNgB,EADM,KACIU,EADJ,KAkCb,OA/BAC,qBAAU,WACR,IAAMC,EAAOC,aAAaC,QAAQ,kBAC9BF,GACFF,EAAYK,KAAKC,MAAMJ,MAExB,IAEHD,qBAAU,WACRE,aAAaI,QAAQ,iBAAkBF,KAAKG,UAAUlB,MACrD,CAACA,IAuBF,sBAAKP,UAAU,YAAf,UACE,cAAC,EAAD,CAAUD,MAtBE,SAACP,GACfyB,EAAY,CAACzB,GAAF,mBAAWe,QAsBpB,cAAC,EAAD,CACEA,SAAUA,EACVK,YArBsB,SAACc,GAC3BC,QAAQC,IAAI,QACZX,EA9BJ,SAAeY,EAAKnB,GAClB,IAAIoB,EAAM,YAAOD,GAMjB,OALAF,QAAQC,IAAI,SAAUE,EAAOpB,IAC7BoB,EAAOpB,GAAIhB,WAAaoC,EAAOpB,GAAIhB,UACnCiC,QAAQC,IAAI,QAASE,EAAOpB,IAE5BiB,QAAQC,IAAI,UAAWE,GAChBA,EAuBOC,CAAMxB,EAAUmB,KAoBxBX,WAjBa,SAACW,GAElB,IADA,IAAII,EAAS,GACJE,EAAI,EAAGA,EAAIzB,EAAS0B,OAAQD,IAC/BA,IAAMN,GAERI,EAAOI,KAAK3B,EAASyB,IAGzBf,EAAYa,UCrCDK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.596ec5a7.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport React, { useState } from 'react';\n\nconst TodoForm = props => {\n  const [todo, setTodo] = useState('');\n  const [isChecked,] = useState(false);\n\n  const addTodo = e => {\n    e.preventDefault();\n    const todoItem = { todo, isChecked }\n    props.onAdd(todoItem);\n    setTodo('');\n  }\n\n\n\n  return (\n    <form onSubmit={addTodo}>\n      <div className=\"row my-2\">\n        <div className=\"form-group col-9 ml-auto\">\n          <input className=\"form-control\" type=\"text\" placeholder=\"Write what to do\" onChange={e => setTodo(e.target.value)} value={todo} />\n        </div>\n        <div className=\"col-2 mr-auto\">\n          <button className=\"btn btn-primary\">Add</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default TodoForm;","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\n\nconst Todo = props => {\n\n\n  return (\n    <ul className='list-group'>\n      { props.todoList.map((todo, index) => {\n        return <li className=\"list-group-item\" key={index}>\n          <form>\n            <div className=\"form-check\">\n              <input id={`todo${index}`} className=\"form-check-input\" type=\"checkbox\" checked={todo.isChecked} onChange={e => props.checkedTodo(index)} />\n              <label htmlFor={`todo${index}`} > {todo.isChecked ? <del>{todo.todo}</del> : todo.todo}</label>\n\n              <div className=\"float-right\">\n                <div className=\"btn btn-danger  mr-2\" onClick={e => props.deleteTodo(index)}> Delete </div>\n              </div>\n\n            </div>\n          </form>\n        </li>\n      })}\n    </ul>\n  );\n};\n\nexport default Todo;","import \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\n\nimport TodoForm from \"./Components/TodoForm\";\nimport Todo from \"./Components/Todo\";\n\nimport React, { useState, useEffect } from \"react\";\n\nfunction check(arr, id) {\n  let newArr = [...arr];\n  console.log(\"before\", newArr[id]);\n  newArr[id].isChecked = !newArr[id].isChecked;\n  console.log(\"After\", newArr[id]);\n\n  console.log(\"New Arr\", newArr);\n  return newArr;\n}\n\nfunction App() {\n  const [todoList, setToDoList] = useState([]);\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"tier-todo-list\");\n    if (data) {\n      setToDoList(JSON.parse(data));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"tier-todo-list\", JSON.stringify(todoList));\n  }, [todoList]);\n\n  const addTodo = (todo) => {\n    setToDoList([todo, ...todoList]);\n  };\n\n  const updateTodoToChecked = (todo_id) => {\n    console.log(\"test\");\n    setToDoList(check(todoList, todo_id));\n  };\n\n  const deleteTodo = (todo_id) => {\n    let newArr = [];\n    for (let i = 0; i < todoList.length; i++) {\n      if (i === todo_id) {\n      } else {\n        newArr.push(todoList[i]);\n      }\n    }\n    setToDoList(newArr);\n  };\n\n  return (\n    <div className=\"container\">\n      <TodoForm onAdd={addTodo} />\n      <Todo\n        todoList={todoList}\n        checkedTodo={updateTodoToChecked}\n        deleteTodo={deleteTodo}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}