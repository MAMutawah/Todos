{"version":3,"sources":["Components/TodoForm.jsx","Components/Todo.jsx","Components/TodoList.jsx","Views/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","props","useState","todo","setTodo","isChecked","emptyTodo","setEmptyTodo","onSubmit","e","preventDefault","length","todoItem","updatedAt","Date","now","createdAt","id","generateId","onAdd","className","type","placeholder","onChange","target","value","handleTodo","style","color","Todo","checked","checkedTodo","htmlFor","onClick","deleteTodo","moment","fromNow","TodoList","selectedClass","unSelectedClass","todoList","setToDoList","todoTab","setTodoTab","doneTab","setDoneTab","filterByCheck","setFilterByCheck","updateTodoToChecked","todo_id","arr","newArr","i","check","push","role","sort","a","b","filter","map","index","Home","useEffect","data","localStorage","getItem","list","JSON","parse","checkList","setItem","stringify","number","found","console","log","undefined","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAgDeA,EA7CE,SAAAC,GAAU,IAAD,EACAC,mBAAS,IADT,mBACjBC,EADiB,KACXC,EADW,OAEHF,oBAAS,GAAvBG,EAFiB,sBAGUH,mBAAS,IAHnB,mBAGjBI,EAHiB,KAGNC,EAHM,KA2BxB,OACE,sBAAMC,SAvBQ,SAAAC,GAEd,GADAA,EAAEC,kBACGJ,GAAaH,EAAKQ,OAAS,EAAG,CACjC,IAAMC,EAAW,CAAET,OAAME,YAAWQ,UAAWC,KAAKC,MAAOC,UAAWF,KAAKC,MAAOE,GAAIhB,EAAMiB,cAC5FjB,EAAMkB,MAAMP,GAEZR,EAAQ,SAERG,EAAa,yBAeUa,UAAU,UAAnC,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,gCAAf,UACE,uBAAOA,UAAU,eAAeC,KAAK,OAAOC,YAAY,mBAAmBC,SAAU,SAAAd,GAAC,OAd3E,SAAAA,GACjBL,EAAQK,EAAEe,OAAOC,OACa,IAA1BhB,EAAEe,OAAOC,MAAMd,OACjBJ,EAAa,wBAEbA,EAAa,IASiFmB,CAAWjB,IAAIgB,MAAOtB,IAE9GG,EACE,qBAAKqB,MAAO,CAAEC,MAAO,OAArB,SAA+BtB,IAAmB,MAGxD,qBAAKc,UAAU,gBAAf,SACE,wBAAQA,UAAU,kBAAlB,yB,iBCZKS,EAzBF,SAAA5B,GAAU,IACbE,EAASF,EAATE,KAER,OAEE,qCACE,sBAAKiB,UAAU,UAAf,UACE,sBAAKA,UAAU,MAAf,UACE,uBAAOH,GAAE,cAASd,EAAKc,IAAMG,UAAU,mBAAmBC,KAAK,WAAWS,QAAS3B,EAAKE,UAAWkB,SAAU,SAAAd,GAAC,OAAIR,EAAM8B,YAAY5B,EAAKc,OACzI,wBAAOe,QAAO,cAAS7B,EAAKc,IAA5B,cAAqCd,EAAKE,UAAY,8BAAMF,EAAKA,OAAcA,EAAKA,WAGtF,qBAAKiB,UAAU,cAAf,SACE,qBAAKA,UAAU,uBAAuBa,QAAS,SAAAxB,GAAC,OAAIR,EAAMiC,WAAW/B,EAAKc,KAA1E,2BAGJ,qBAAKG,UAAU,6BAAf,SACE,sBAAMA,UAAU,WAAhB,SAA4Be,IAAOhC,EAAKU,WAAWuB,kBCJ3D,IAoEeC,EApEE,SAAApC,GAAU,IAAD,EACCC,mBAAS,eAA3BoC,EADiB,sBAEGpC,mBAAS,uBAA7BqC,EAFiB,oBAIhBC,EAA0BvC,EAA1BuC,SAAUC,EAAgBxC,EAAhBwC,YAJM,EAMMvC,mBAASoC,GANf,mBAMjBI,EANiB,KAMRC,EANQ,OAOMzC,mBAASqC,GAPf,mBAOjBK,EAPiB,KAORC,EAPQ,OASkB3C,oBAAS,GAT3B,mBASjB4C,EATiB,KASFC,EATE,KAWlBC,EAAsB,SAACC,GAG3BR,EA5BJ,SAAeS,EAAKjC,GAGlB,IAFA,IAAIkC,EAAM,YAAOD,GAERE,EAAI,EAAGA,EAAID,EAAOxC,OAAQyC,IAC7BD,EAAOC,GAAGnC,KAAOA,IACnBkC,EAAOC,GAAG/C,WAAa8C,EAAOC,GAAG/C,UACjC8C,EAAOC,GAAGvC,UAAYC,KAAKC,OAI/B,OAAOoC,EAkBOE,CAAMb,EAAUS,KAGxBf,EAAa,SAACe,GAElB,IADA,IAAIE,EAAS,GACJC,EAAI,EAAGA,EAAIZ,EAAS7B,OAAQyC,IAC/BZ,EAASY,GAAGnC,KAAOgC,GAErBE,EAAOG,KAAKd,EAASY,IAGzBX,EAAYU,IAgBd,OACE,gCACE,qBAAK/B,UAAU,SAAf,SACE,sBAAKA,UAAU,yBAAyBmC,KAAK,QAA7C,UACE,qBAAKnC,UAAS,cAASsB,GAAWT,QAjBvB,SAAAxB,GACjBkC,EAAWL,GACXO,EAAWN,GACXQ,GAAiB,IAcX,kBACA,qBAAK3B,UAAS,cAASwB,GAAWX,QAZvB,SAAAxB,GACjBkC,EAAWJ,GACXM,EAAWP,GACXS,GAAiB,IASX,uBAGJ,oBAAI3B,UAAU,aAAd,SACGoB,EACEgB,MAAK,SAACC,EAAGC,GAAQ,OAAO,IAAI5C,KAAK4C,EAAE7C,WAAa,IAAIC,KAAK2C,EAAE5C,cAC3D8C,QAAO,SAACxD,GAAW,OAAOA,EAAKE,YAAcyC,KAC7Cc,KAAI,SAACzD,EAAM0D,GACV,OAAO,oBAAIzC,UAAU,kBAAd,SACL,cAAC,EAAD,CACEjB,KAAMA,EACN4B,YAAaiB,EACbd,WAAYA,KAJ4B2B,YCWzCC,EA5EF,WAAO,IAAD,EAEe5D,mBAAS,IAFxB,mBAEVsC,EAFU,KAEAC,EAFA,KAIjBsB,qBAAU,WAER,IAAMC,EAAOC,aAAaC,QAAQ,kBAClC,GAAIF,EAAM,CACR,IAAIG,EAAOC,KAAKC,MAAML,GACtBM,EAAUH,GACV1B,EAAY0B,MAGb,IAEHJ,qBAAU,WACRE,aAAaM,QAAQ,iBAAkBH,KAAKI,UAAUhC,MACrD,CAACA,IAEJ,IAIMtB,EAAa,WAIjB,IAFA,IAAIuD,EAASjC,EAAS7B,OAAS,EAC3B+D,GAAQ,EACLA,GAAO,CACZA,GAAQ,EACR,IAAK,IAAItB,EAAI,EAAGA,EAAIZ,EAAS7B,OAAQyC,IAEnC,GADAuB,QAAQC,IAAI,OAAQpC,EAASY,GAAGnC,IAC5BuB,EAASY,GAAGnC,KAAOwD,EAAQ,CAC7BC,GAAQ,EACRD,IACA,OAKN,OAAOA,GAIHH,EAAY,SAACpB,GAEjB,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAIvC,OAAQyC,SAEZyB,IAAd3B,EAAIE,GAAGnC,KACT0D,QAAQC,IAAI,QAASxB,EAAGlC,KACxBgC,EAAIE,GAAGnC,GAAKmC,EAAI,QAGOyB,IAArB3B,EAAIE,GAAGpC,YAETkC,EAAIE,GAAGpC,UAAYF,KAAKC,YAID8D,IAArB3B,EAAIE,GAAGvC,YAETqC,EAAIE,GAAGvC,UAAYC,KAAKC,QAO9B,OAEE,qCACE,cAAC,EAAD,CAAUI,MAnDE,SAAChB,GACfsC,EAAY,CAACtC,GAAF,mBAAWqC,MAkDMtB,WAAYA,IACtC,cAAC,EAAD,CAAUsB,SAAUA,EAAUC,YAAaA,QC7DlCqC,MAVf,WACE,OACE,qBAAK1D,UAAU,YAAf,SACE,cAAC,IAAD,UACE,cAAC,EAAD,CAAM2D,KAAK,iBCEJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.20ec8bb1.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport React, { useState } from 'react';\n\nconst TodoForm = props => {\n  const [todo, setTodo] = useState('');\n  const [isChecked,] = useState(false);\n  const [emptyTodo, setEmptyTodo] = useState(\"\")\n\n  const addTodo = e => {\n    e.preventDefault();\n    if (!emptyTodo && todo.length > 0) {\n      const todoItem = { todo, isChecked, updatedAt: Date.now(), createdAt: Date.now(), id: props.generateId() }\n      props.onAdd(todoItem);\n      // console.log(todoItem);\n      setTodo('');\n    } else {\n      setEmptyTodo('Todo must be entered');\n    }\n  }\n\n  const handleTodo = e => {\n    setTodo(e.target.value);\n    if (e.target.value.length === 0) {\n      setEmptyTodo('Todo must be entered')\n    } else {\n      setEmptyTodo('');\n    }\n  }\n\n\n  return (\n    <form onSubmit={addTodo} className=\"m-0 p-0\">\n      <div className=\"row my-2\">\n        <div className=\"form-group col-6 ml-auto my-0\">\n          <input className=\"form-control\" type=\"text\" placeholder=\"Write what to do\" onChange={e => handleTodo(e)} value={todo} />\n          {\n            emptyTodo ?\n              <pre style={{ color: 'red' }}>{emptyTodo}</pre> : ''\n          }\n        </div>\n        <div className=\"col-2 mr-auto\">\n          <button className=\"btn btn-primary\">Add</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default TodoForm;","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport moment from 'moment';\n\nconst Todo = props => {\n  const { todo } = props\n\n  return (\n\n    <>\n      <div className=\"row m-1\">\n        <div className=\"col\">\n          <input id={`todo${todo.id}`} className=\"form-check-input\" type=\"checkbox\" checked={todo.isChecked} onChange={e => props.checkedTodo(todo.id)} />\n          <label htmlFor={`todo${todo.id}`} > {todo.isChecked ? <del>{todo.todo}</del> : todo.todo}</label>\n        </div>\n\n        <div className=\"float-right\">\n          <div className=\"btn btn-danger  mr-2\" onClick={e => props.deleteTodo(todo.id)}> Delete </div>\n        </div>\n      </div>\n      <div className=\"row mx-2 font-weight-light\">\n        <span className=\"bg-light\">{moment(todo.updatedAt).fromNow()}</span>\n      </div>\n\n    </>\n\n  );\n};\n\nexport default Todo;","import React, { useState } from 'react'\nimport Todo from './Todo';\n\nfunction check(arr, id) {\n  let newArr = [...arr];\n\n  for (let i = 0; i < newArr.length; i++) {\n    if (newArr[i].id === id) {\n      newArr[i].isChecked = !newArr[i].isChecked;\n      newArr[i].updatedAt = Date.now();\n    }\n  }\n\n  return newArr;\n}\n\n\nconst TodoList = props => {\n  const [selectedClass,] = useState(\"btn-primary\");\n  const [unSelectedClass,] = useState(\"btn-outline-primary\");\n\n  const { todoList, setToDoList } = props\n\n  const [todoTab, setTodoTab] = useState(selectedClass)\n  const [doneTab, setDoneTab] = useState(unSelectedClass)\n\n  const [filterByCheck, setFilterByCheck] = useState(false)\n\n  const updateTodoToChecked = (todo_id) => {\n    // console.log(todo_id);\n    // console.log(todoList);\n    setToDoList(check(todoList, todo_id));\n  };\n\n  const deleteTodo = (todo_id) => {\n    let newArr = [];\n    for (let i = 0; i < todoList.length; i++) {\n      if (todoList[i].id === todo_id) {\n      } else {\n        newArr.push(todoList[i]);\n      }\n    }\n    setToDoList(newArr);\n  };\n\n  const chooseTodo = e => {\n    setTodoTab(selectedClass);\n    setDoneTab(unSelectedClass);\n    setFilterByCheck(false)\n  }\n\n  const chooseDone = e => {\n    setTodoTab(unSelectedClass);\n    setDoneTab(selectedClass);\n    setFilterByCheck(true)\n\n  }\n\n  return (\n    <div>\n      <div className=\"d-flex\">\n        <div className=\"btn-group my-2 mx-auto\" role=\"group\">\n          <div className={`btn ${todoTab}`} onClick={chooseTodo}>Todo</div>\n          <div className={`btn ${doneTab}`} onClick={chooseDone}>Done</div>\n        </div>\n      </div>\n      <ul className='list-group'>\n        {todoList\n          .sort((a, b) => { return new Date(b.updatedAt) - new Date(a.updatedAt) })\n          .filter((todo) => { return todo.isChecked === filterByCheck })\n          .map((todo, index) => {\n            return <li className=\"list-group-item\" key={index}>\n              <Todo\n                todo={todo}\n                checkedTodo={updateTodoToChecked}\n                deleteTodo={deleteTodo}\n              />\n            </li>\n          })}\n      </ul>\n\n    </div>\n  )\n}\n\nexport default TodoList\n","import React, { useState, useEffect } from \"react\";\n\nimport TodoForm from \"../Components/TodoForm\";\nimport TodoList from \"../Components/TodoList\";\n\n\nconst Home = () => {\n\n  const [todoList, setToDoList] = useState([]);\n\n  useEffect(() => {\n    // const data = localStorage.getItem(\"tier-list\");\n    const data = localStorage.getItem(\"tier-todo-list\");\n    if (data) {\n      let list = JSON.parse(data);\n      checkList(list);\n      setToDoList(list);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"tier-todo-list\", JSON.stringify(todoList));\n  }, [todoList]);\n\n  const addTodo = (todo) => {\n    setToDoList([todo, ...todoList]);\n  };\n\n  const generateId = () => {\n    // console.log('yy', todoList[0], todoList.length + 1);\n    let number = todoList.length + 1;\n    let found = true;\n    while (found) {\n      found = false\n      for (let i = 0; i < todoList.length; i++) {\n        console.log('test', todoList[i].id);\n        if (todoList[i].id === number) {\n          found = true;\n          number++;\n          break;\n        }\n      }\n    }\n\n    return number;\n  }\n\n  // This Method is temporary for updating the old data\n  const checkList = (arr) => {\n    // let updatedArr = [...arr]\n    for (let i = 0; i < arr.length; i++) {\n      // console.log(i);\n      if (arr[i].id === undefined) {\n        console.log('No ID', i, generateId());\n        arr[i].id = i + 1;\n      }\n\n      if (arr[i].createdAt === undefined) {\n        // console.log('No createdAt', i);\n        arr[i].createdAt = Date.now()\n\n      }\n\n      if (arr[i].updatedAt === undefined) {\n        // console.log('No updatedAt', i);\n        arr[i].updatedAt = Date.now()\n      }\n\n    }\n\n  }\n\n  return (\n\n    <>\n      <TodoForm onAdd={addTodo} generateId={generateId} />\n      <TodoList todoList={todoList} setToDoList={setToDoList} />\n    </>\n  )\n}\n\nexport default Home\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\n\nimport { Router } from \"@reach/router\";\nimport Home from \"./Views/Home\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router>\n        <Home path=\"/Todos/\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}